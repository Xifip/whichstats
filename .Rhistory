setwd("~/dev/wd_r/whichstats")
source('~/dev/wd_r/whichstats/read_data.R')
source('~/dev/wd_r/whichstats/check_duplicate_responses.R')
source('~/dev/wd_r/whichstats/clean_voter.R')
as.numeric(scorecheck)
qplot(as.numeric(scorecheck))
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
qplot(as.numeric(scorecheck))
scores <- (as.numeric(scorecheck))
qplot(as.numeric(scorecheck)) + geom_point()
qplot(score) + geom_point(aes(y=score))
plot(score)
plot(scores)
qplot(scores) + geom_point(aes(y=scores))
plot(scores)
qplot(score)
qplot(scores)
max(scores)
scores[scores == 81]
scorecheck
scorecheck[scorecheck == 81]
scorecheck[scorecheck == 0]
scorecheck[scorecheck %in% c(0, 81)]
scorecheck[scorecheck %in% c(0:2, 81)]
scorecheck[scorecheck %in% c(0:20, 81)]
length(scorecheck[scorecheck %in% c(0:20, 81)])
length(scorecheck[!(scorecheck %in% c(0:20, 81))])
length(scorecheck)
qplot(as.numeric(scorecheck[!(scorecheck %in% c(0:20, 81))]))
qplot(as.numeric(scorecheck[!(scorecheck %in% c(0:20, 81))]), binwidth = 81/30)
as.numeric(scorecheck)
clas(scorecheck)
class(scorecheck)
str(scorecheck)
source('~/dev/wd_r/whichstats/clean_voter.R')
id_duplicates
id_duplicates[2528]
id_duplicates[2529]
source('~/dev/wd_r/whichstats/clean_voter.R')
length(scorecheck)
source('~/dev/wd_r/whichstats/clean_voter.R')
id_duplicates
id_duplicates[id_duplicates==0]
id_duplicates
id_duplicates[id_duplicates==0]
id_duplicates
head(id_duplicates)
head(id_duplicates, 400)
id_duplicates[id_duplicates==0]
unlist(id_duplicates)
id_duplicates[1]
scorecheck[1]
scorecheck[[1]]
names(scorecheck)
?sum
as.numeric(names(scorecheck))
scores_without_ajacent_duplicates <- lapply(seq_along(scorecheck), myfunction_idx, x = scorecheck)
voter_id_vector <- as.numeric(names(scorecheck))
voter_id_df <- data.frame(voter_id = voter_id_vector, score = scores_without_ajacent_duplicates )
voter_id_df
scores_without_ajacent_duplicates
unlist(scores_without_ajacent_duplicates)
scores_without_ajacent_duplicates <- unlist(lapply(seq_along(scorecheck), myfunction_idx, x = scorecheck))
voter_id_vector <- as.numeric(names(scorecheck))
voter_id_df <- data.frame(voter_id = voter_id_vector, score = scores_without_ajacent_duplicates )
voter_id_df
voter_id_df_clean <- voter_id_df[voter_id_df != 0,]
voter_id_df_clean
voter_id_df_clean <- voter_id_df[voter_id_df$score != 0,]
voter_id_df_clean
voter_id_df
tail(voter_id_df_clean)
tail(voter_id_df)
head(vpositions)
head(suncheck)
head(sumcheck)
sumcheck
head(vpositions)
unlist(sumcheck)
as.numeric(unlist(sumcheck))
max(as.numeric(unlist(sumcheck)))
scorecheck[!(scorecheck %in% c(0:20, 81))]
scorecheck[(scorecheck %in% c(0:20, 81))]
names(scorecheck[(scorecheck %in% c(0:20, 81))])
scorecheck
names(scorecheck[(scorecheck %in% c(0:20, 81))])
scorecheck
as.numericnames(scorecheck[(scorecheck %in% c(0:20, 81))]))
as.numeric(names(scorecheck[(scorecheck %in% c(0:20, 81))]))
voter_ids_out_of_range < as.numeric(names(scorecheck[(scorecheck %in% c(0:20, 81))]))
voter_ids_out_of_range <- as.numeric(names(scorecheck[(scorecheck %in% c(0:20, 81))]))
vpositions_clean1 <- vpositions[!(vpositions$voter_id %in%  voter_ids_out_of_range )]
head(voterpositions)
head(vpositions)
vpositions$voter_id
vpositions[!(vpositions$voter_id %in% voter_ids_out_of_range)]
voter_ids_out_of_range
vpositions[!(vpositions$voter_id %in% c(2548, 2551))]
str(vpositions)
vpositions[!(vpositions$voter_id %in% c(2548, 2551)),]
vpositions_clean1 <- vpositions[!(vpositions$voter_id %in%  voter_ids_out_of_range ),]
vpositions_clean1
tail(vpositions_clean1)
voter_ids_out_of_range
tail(vpositions_clean1$voter_id)
(vpositions_clean1$voter_id)
levels(as.factor(vpositions_clean1$voter_id))
tail(levels(as.factor(vpositions_clean1$voter_id)))
tail(voter_ids_out_of_range)
tail(levels(as.factor(vpositions_clean1$voter_id)), 20)
tail(voter_ids_out_of_range, 20)
source('~/dev/wd_r/whichstats/clean_voter.R')
source('~/dev/wd_r/whichstats/clean_voter.R')
str(vpositions_clean2)
voter_id_df_clean
head(voter_id_df_clean)
vpositions_clean2 <- vpositions_clean1[(vpositions_clean1$voter_id %in%  voter_id_df_clean$voter_id ),]
str(vpositions_clean2)
str(vpositions_clean1)
str(vpositions)
scorecheck2 <- by(vpositions_clean2[,5], vpositions_clean2$voter_id, sum)
qplot(as.numeric(scorecheck2, binwidth = 81/30)
)
qplot(as.numeric(scorecheck2, binwidth = 81/30))
qplot(as.numeric(scorecheck2), binwidth = 81/30)
str(vpositions_clean2$voter_id)
head(clean_responses)
str(clean_responses$voter_id)
str(vpositions_clean2$voter_id)
str(vpositions_clean2)
responses_clean <- clean_responses[(clean_responses$voter_id %in%  vpositions_clean2$voter_id ),]
str(responses_clean)
str(clean_responses)
nrow(responses_clean)/9
length(responses_clean$response_id)
length(level(as.factor(responses_clean$response_id)))
length(levels(as.factor(responses_clean$response_id)))
length(levels(as.factor(vpositions_clean2$voter_id)))
head(vpositions_clean2)
head(responses_clean)
responses_clean_sub <- responses_clean[,(names(responses_clean) %in% c(response_id, voter_id, surveyanswer_id, surveyquestion_id)]
responses_clean_sub <- responses_clean[,(names(responses_clean) %in% c(response_id, voter_id, surveyanswer_id, surveyquestion_id))]
responses_clean_sub <- responses_clean[,(names(responses_clean) %in% c("response_id", "voter_id", "surveyanswer_id", "surveyquestion_id"))]
head(responses_clean_sub)
t(responses_clean_sub)
head(t(responses_clean_sub))
names(t(responses_clean_sub))
cars <- mtcars[1:5,1:4]
cars
t(cars)
names(t(cars))
head(t(cars))
str(responses_clean_sub)
responses_clean_sub[responses_clean_sub$response_id == 8]
responses_clean_sub[responses_clean_sub$response_id == 8,]
t(responses_clean_sub[responses_clean_sub$response_id == 8,])
library("reshape2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
cast(responses_clean_sub, voter_id ~ surveyquestion_id)
cast(responses_clean_sub, voter_id ~ surveyquestion_id)
dcast(responses_clean_sub, voter_id ~ surveyquestion_id)
responses_clean_sub[responses_clean_sub$response_id == 8,]
head(dcast(responses_clean_sub, voter_id ~ surveyquestion_id))
head(responses_clean)
?dcast
head(dcast(responses_clean_sub, voter_id ~ surveyquestion_id, value.var=surveyanswer_id))
head(dcast(responses_clean_sub, voter_id ~ surveyquestion_id, value.var="surveyanswer_id"))
head(dcast(responses_clean_sub, voter_id ~ surveyquestion_id, sum, value.var="surveyanswer_id"))
vpositions_clean2
head(vpositions_clean2)
head(dcast(vpositions_clean2, voter_id ~ question_id, sum, value.var="voterposition_score"))
